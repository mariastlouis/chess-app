// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="sider"
>
          <ControlPanel
                    chessPiece=""
                    message="To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves"
                    mode={[Function]}
          />
</div>,
        <div
          className="game-board"
>
          <Board
                    bishopPosition={
                              Array [
                                        2,
                                        7,
                                      ]
                    }
                    checkMoveValid={[Function]}
                    chessPiece=""
                    gameMode="standard"
                    knightPosition={
                              Array [
                                        1,
                                        7,
                                      ]
                    }
                    selectPiece={undefined}
                    setSquare={[Function]}
          />
</div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ControlPanel
            chessPiece=""
            message="To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves"
            mode={[Function]}
/>,
          "className": "sider",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "chessPiece": "",
            "message": "To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves",
            "mode": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Board
            bishopPosition={
                        Array [
                                    2,
                                    7,
                                  ]
            }
            checkMoveValid={[Function]}
            chessPiece=""
            gameMode="standard"
            knightPosition={
                        Array [
                                    1,
                                    7,
                                  ]
            }
            selectPiece={undefined}
            setSquare={[Function]}
/>,
          "className": "game-board",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "bishopPosition": Array [
              2,
              7,
            ],
            "checkMoveValid": [Function],
            "chessPiece": "",
            "gameMode": "standard",
            "knightPosition": Array [
              1,
              7,
            ],
            "selectPiece": undefined,
            "setSquare": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="sider"
>
            <ControlPanel
                        chessPiece=""
                        message="To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves"
                        mode={[Function]}
            />
</div>,
          <div
            className="game-board"
>
            <Board
                        bishopPosition={
                                    Array [
                                                2,
                                                7,
                                              ]
                        }
                        checkMoveValid={[Function]}
                        chessPiece=""
                        gameMode="standard"
                        knightPosition={
                                    Array [
                                                1,
                                                7,
                                              ]
                        }
                        selectPiece={undefined}
                        setSquare={[Function]}
            />
</div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ControlPanel
              chessPiece=""
              message="To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves"
              mode={[Function]}
/>,
            "className": "sider",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "chessPiece": "",
              "message": "To move the pieces, first click on a piece and then click on the square you want it to move to. Note that the pieces can only make valid chess moves",
              "mode": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Board
              bishopPosition={
                            Array [
                                          2,
                                          7,
                                        ]
              }
              checkMoveValid={[Function]}
              chessPiece=""
              gameMode="standard"
              knightPosition={
                            Array [
                                          1,
                                          7,
                                        ]
              }
              selectPiece={undefined}
              setSquare={[Function]}
/>,
            "className": "game-board",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "bishopPosition": Array [
                2,
                7,
              ],
              "checkMoveValid": [Function],
              "chessPiece": "",
              "gameMode": "standard",
              "knightPosition": Array [
                1,
                7,
              ],
              "selectPiece": undefined,
              "setSquare": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
